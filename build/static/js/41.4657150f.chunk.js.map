{"version":3,"file":"static/js/41.4657150f.chunk.js","mappings":"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","sources":["components/Characteristic/AnimatedItemBtn.js","components/Characteristic/DescriptionItem.js","components/Characteristic/DescriptionList.js","components/Characteristic/AnimatedList.js","components/Characteristic/Item.js","components/Characteristic/Characteristic.js","components/Characteristic/index.js","../node_modules/debounce/index.js","../node_modules/react-use-measure/dist/web.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { animated, useSpring } from 'react-spring';\nimport env from '../../env.json';\n\nconst {\n  mainBtnColors: { btnBorder, btnText },\n  buyBtnColors: { buyBtnBorder, buyBtnHoverText },\n} = env.colors;\n\nconst closeBtnArrow = `transparent ${btnBorder} ${btnBorder} transparent`;\nconst openBtnArrow = `${buyBtnBorder} transparent transparent ${buyBtnBorder}`;\n\nconst Button = styled.button`\n  position: relative;\n  width: 100%;\n  padding: 12px 30px;\n  background-color: transparent;\n  text-align: left;\n  border: 1px solid;\n\n  &:after {\n    content: '';\n    position: absolute;\n    right: 15px;\n    bottom: ${props => (props.open ? '5px' : '15px')};\n    width: 17px;\n    height: 17px;\n    border: 1px solid;\n    border-color: ${props => (props.open ? openBtnArrow : closeBtnArrow)};\n    transform: rotate(45deg);\n    transition: border-color 0.4s ease-in-out, bottom 0.4s ease-in-out;\n  }\n`;\n\nconst AnimatedItemBtn = ({ title, isOpen, toggleFn }) => {\n  const AnimatedButton = animated(Button);\n  const closeBtnBorders = `transparent transparent ${btnBorder} transparent`;\n  const openBtnBorders = `${buyBtnBorder} ${buyBtnBorder} transparent ${buyBtnBorder}`;\n\n  const openBtnProps = useSpring({\n    borderColor: closeBtnBorders,\n    color: btnText,\n    to: {\n      borderColor: openBtnBorders,\n      color: buyBtnHoverText,\n    },\n  });\n  const closeBtnProps = useSpring({\n    borderColor: openBtnBorders,\n    color: buyBtnHoverText,\n    to: {\n      borderColor: closeBtnBorders,\n      color: btnText,\n    },\n  });\n  const btnProps = isOpen ? openBtnProps : closeBtnProps;\n\n  return (\n    <AnimatedButton onClick={toggleFn} open={isOpen} style={btnProps}>\n      {title}\n    </AnimatedButton>\n  );\n};\nexport default AnimatedItemBtn;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MainContext } from '../Context';\n\nconst Li = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n\n  & > p:first-child {\n    text-align: left;\n  }\n\n  & > p:last-child {\n    text-align: right;\n  }\n`;\n\nconst DescriptionItem = ({ data }) => {\n  const {\n    currentModel: { currentMemory },\n  } = useContext(MainContext);\n\n  const value = data[0] === \"Built-in memory (GB)\" ? currentMemory : data[1];\n\n  return (\n    <Li>\n      <p>{data[0]}</p>\n      <p>{value}</p>\n    </Li>\n  );\n};\nexport default DescriptionItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport DescriptionItem from './DescriptionItem';\nimport { selectCharacteristics } from '../../store/getGoodDbSlice';\n\nconst Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px 15px;\n`;\n\nconst DescriptionList = ({ name }) => {\n  const data = useSelector(selectCharacteristics)[name].descriptions;\n\n  return (\n    <Ul>\n      {data.map((item, i) => (\n        <DescriptionItem key={i} data={item} />\n      ))}\n    </Ul>\n  );\n};\nexport default DescriptionList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport useMeasure from 'react-use-measure';\nimport { animated, useSpring } from 'react-spring';\nimport env from '../../env.json';\nimport DescriptionList from './DescriptionList';\n\nconst { hoverColor } = env.colors;\n\nconst Description = styled.div`\n  margin-top: -2px;\n  border: 1px solid;\n  border-color: transparent ${hoverColor} ${hoverColor} ${hoverColor};\n  overflow: hidden;\n  height: ${props => (props.open ? 'auto' : 0)};\n`;\n\nconst AnimatedList = ({ name, isOpen }) => {\n  const [ref, { height }] = useMeasure();\n  const listProps = useSpring({ height });\n\n  return (\n    <animated.div style={{ overflow: 'hidden', ...listProps }}>\n      <Description ref={ref} open={isOpen}>\n        <DescriptionList name={name} />\n      </Description>\n    </animated.div>\n  );\n};\nexport default AnimatedList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport AnimatedItemBtn from './AnimatedItemBtn';\nimport AnimatedList from './AnimatedList';\n\nconst Wrapper = styled.li`\n  margin-bottom: 15px;\n`;\n\nconst Item = ({ name, title }) => {\n  const [openList, setOpenList] = useState(false);\n\n  const toggleDescription = () => setOpenList(!openList);\n\n  return (\n    <Wrapper>\n      <AnimatedItemBtn\n        title={title}\n        isOpen={openList}\n        toggleFn={toggleDescription}\n      />\n      <AnimatedList name={name} isOpen={openList} />\n    </Wrapper>\n  );\n};\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector } from 'react-redux';\nimport { selectCharacteristics } from '../../store/getGoodDbSlice';\n\nimport Container from '../Styled/Container';\nimport { SectionTitle } from '../Styled/Titles';\nimport Item from './Item';\n\nconst List = styled.ul`\n  max-width: 920px;\n`;\n\nconst Characteristic = () => {\n  const data = useSelector(selectCharacteristics);\n\n  return (\n    <Container>\n      <SectionTitle>Features</SectionTitle>\n      <List>\n        {Object.entries(data).map(([name, data]) => (\n          <Item key={name} name={name} title={data.title} />\n        ))}\n      </List>\n    </Container>\n  );\n};\nexport default Characteristic;\n","import Characteristic from './Characteristic';\n\nexport default Characteristic;\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"names":["env","mainBtnColors","btnBorder","btnText","buyBtnColors","buyBtnBorder","buyBtnHoverText","closeBtnArrow","openBtnArrow","Button","styled","props","open","title","isOpen","toggleFn","AnimatedButton","animated","closeBtnBorders","openBtnBorders","openBtnProps","useSpring","borderColor","color","to","closeBtnProps","btnProps","onClick","style","Li","data","currentMemory","useContext","MainContext","currentModel","value","Ul","name","useSelector","selectCharacteristics","descriptions","map","item","i","hoverColor","Description","useMeasure","ref","height","listProps","overflow","Wrapper","useState","openList","setOpenList","List","Container","Object","entries","debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","_temp","scroll","offsetSize","polyfill","ResizeObserver","window","Error","left","top","width","bottom","right","x","y","bounds","set","state","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","useEffect","current","useMemo","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","freeze","areBoundsEqual","createDebounce","forceRefresh","resizeChange","scrollChange","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","node","findScrollContainers","document","body","getComputedStyle","overflowX","overflowY","some","prop","push","parentElement","keys","a","b","every","key"],"sourceRoot":""}