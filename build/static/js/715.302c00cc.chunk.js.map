{"version":3,"file":"static/js/715.302c00cc.chunk.js","mappings":"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","sources":["components/CrossSell/ButtonAddCross.js","components/CrossSell/CrossItem.js","components/CrossSell/CrossList.js","components/CrossSell/MoreButton.js","components/CrossSell/index.js","components/CrossSell/CrossSell.js","../node_modules/debounce/index.js","../node_modules/react-use-measure/dist/web.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { animated, config, useTransition } from 'react-spring';\nimport { addCrossGood, delCrossGood } from '../../store/sendOrderSlice';\n\nimport { MainButton, BuyButton } from '../Styled/Buttons';\n\nconst ButtonAddCross = ({ id, name }) => {\n  const dispatch = useDispatch();\n  const [toggle, setToggle] = useState(true);\n  const transitions = useTransition(toggle, {\n    from: {\n      gridArea: '1/-1',\n      opacity: 0,\n    },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: config.slow,\n  });\n\n  const handleAddCrossGood = () => {\n    if (toggle) {\n      dispatch(addCrossGood({ key: id, value: name }));\n    } else {\n      dispatch(delCrossGood(id));\n    }\n    setToggle(!toggle);\n  };\n\n  return transitions((props, item) =>\n    item ? (\n      <animated.div style={props}>\n        <BuyButton onClick={handleAddCrossGood}>Add</BuyButton>\n      </animated.div>\n    ) : (\n      <animated.div style={props}>\n        <MainButton onClick={handleAddCrossGood}>Remove</MainButton>\n      </animated.div>\n    )\n  );\n};\nexport default ButtonAddCross;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { animated, useSpring, config } from 'react-spring';\nimport ButtonAddCross from './ButtonAddCross';\n\nconst Item = styled.article`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  min-height: 360px;\n  height: 100%;\n  justify-content: space-between;\n  align-items: baseline;\n  gap: 10px;\n  height: max(360px, 100%);\n\n  & > img {\n    box-shadow: 0 2px 6px 1px rgba(0, 0, 0, 0.1);\n    margin-bottom: 12px;\n  }\n\n  & > p {\n    font-weight: 700;\n    font-size: 24px;\n  }\n\n  &:last-child > div {\n    display: grid;\n  }\n`;\nconst Title = styled.h3`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: left;\n  flex: 1 0 auto;\n`;\n\nconst CrossItem = ({ data }) => {\n  const { id, name, photo, price } = data;\n\n  const props = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n    config: config.slow,\n  });\n\n  return (\n    <li>\n      <Item>\n        <animated.img style={props} src={photo} alt={id} />\n        <Title>{name}</Title>\n        <p>${price}</p>\n        <div>\n          <ButtonAddCross id={id} name={name} />\n        </div>\n      </Item>\n    </li>\n  );\n};\nexport default CrossItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { selectGoodForShow } from '../../store/crossSellSlice';\nimport CrossItem from './CrossItem';\n\nimport useMeasure from 'react-use-measure';\nimport { animated, useSpring } from 'react-spring';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  height: auto;\n`;\nconst CrossList = () => {\n  const goodForShow = useSelector(selectGoodForShow);\n\n  const [ref, { height }] = useMeasure();\n  const listProps = useSpring({ height });\n\n  return (\n    <animated.div style={{ overflow: 'hidden', ...listProps }}>\n      <List ref={ref}>\n        {goodForShow.map(item => (\n          <CrossItem key={item.id} data={item} />\n        ))}\n      </List>\n    </animated.div>\n  );\n};\nexport default CrossList;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectCrossSellDb,\n  addGoodsToShow,\n  selectCountStack,\n} from '../../store/crossSellSlice';\n\nimport { MainButton } from '../Styled/Buttons';\n\nconst Button = styled(MainButton)`\n  align-self: flex-end;\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n`;\n\nconst MoreButton = () => {\n  const [showBtn, setShowBtn] = useState(true);\n  const dispatch = useDispatch();\n  const crossSellDb = useSelector(selectCrossSellDb);\n  const goodCountStack = useSelector(selectCountStack);\n  const maxCount = useMemo(() => crossSellDb.length, [crossSellDb]);\n\n  const showMore = () =>\n    goodCountStack <= maxCount && dispatch(addGoodsToShow());\n\n  useEffect(() => {\n    goodCountStack > maxCount && setShowBtn(false);\n  }, [goodCountStack, maxCount]);\n\n  return (\n    <Button onClick={showMore} show={showBtn}>\n      Show more\n    </Button>\n  );\n};\nexport default MoreButton;\n","import CrossSell from './CrossSell';\n\nexport default CrossSell;\n","import React from 'react';\nimport Container from '../Styled/Container';\nimport { SectionTitle } from '../Styled/Titles';\nimport CrossList from './CrossList';\nimport MoreButton from './MoreButton';\n\nconst CrossSell = () => (\n  <Container>\n    <SectionTitle>Other items you may like</SectionTitle>\n    <CrossList />\n    <MoreButton />\n  </Container>\n);\nexport default CrossSell;\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"names":["id","name","dispatch","useDispatch","useState","toggle","setToggle","transitions","useTransition","from","gridArea","opacity","enter","leave","config","handleAddCrossGood","addCrossGood","key","value","delCrossGood","props","item","animated","style","onClick","Item","styled","Title","data","photo","price","useSpring","to","src","alt","List","goodForShow","useSelector","selectGoodForShow","useMeasure","ref","height","listProps","overflow","map","Button","MainButton","show","showBtn","setShowBtn","crossSellDb","selectCrossSellDb","goodCountStack","selectCountStack","maxCount","useMemo","length","useEffect","addGoodsToShow","Container","debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","_temp","scroll","offsetSize","polyfill","ResizeObserver","window","Error","left","top","width","bottom","right","x","y","bounds","set","state","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","current","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","Object","freeze","areBoundsEqual","createDebounce","forceRefresh","resizeChange","scrollChange","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","node","findScrollContainers","document","body","getComputedStyle","overflowX","overflowY","some","prop","push","parentElement","keys","a","b","every"],"sourceRoot":""}